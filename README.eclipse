Eclipse setup for GenEvA development
====================================

Follow these steps to download and setup a customized Eclipse package for GenEvA 
development:

- go to the "Geneva C++ development" package page on the Yoxos On Demand site:
    http://ondemand.yoxos.com/geteclipse/start?profiles=868129468_1226699040856962892

- click on "Start Download" on the "Schedule" window

- save the file and unpack in your desired location on your disk, say $DIR. This will
  create a folder $DIR/eclipse containing the full Eclipse installation.

- run the newly installed eclipse,
    $DIR/eclipse/eclipse (eclipse.exe on Windows)

- choose a WorkSpace location. The workspace is the place where Eclipse will keep all
  your projects and associated data, in particular the GenEvA source code.

- if you are behind a proxy, go to
    Window / Preferences / General / Network Connections
  and set your proxy server

- restart eclipse

- if the Yoxos Workspace Provisioning dialog does not pop-up (seems to be a bug), go to
    Help / Workspace Provisioning with Yoxos / Manage Provisionings...

- if the Yoxos Workspace Provisioning dialog shows a "Geneva C++ development" profile
  then select it and click "Apply Selected"

- if the Yoxos Workspace Provisioning dialog informs that there is no WS Provisioning
  profile associated with the current setup, then click "Cancel" and go to
    Help / Software Updates with Yoxos...

    -- go to the "Plug-In Explorer" view, open the "Public Profiles" tree, browse to
       the "Development" folder, select the "Geneva C++ development" profile, and run
       "Add to schedule" from the context menu (or click the green arrow in the
       "Schedule" view).

    -- click on "Start Installation"

- if no GenEvA project was created automatically by Workspace Provisioning, then you
  need to check it out by hand

    -- go to
         Window / Open Perspective / SVN Repository Exploring

    -- in the "SVN Repositories" view, click the "Add SVN Repository" button on the
       upper right corner

    -- enter
         https://genevaopt.svn.sf.net/svnroot/genevaopt
       in the Location URL

    -- expand the SVN tree, select the "trunk" folder, and run "Checkout..." from
       its context menu

    -- select "Check out as a project in the workspace", name "GenEvA", and click "Finish"


CMake integration
=================

The Eclipse package and the GenEvA source tree are preconfigured to ease the development
of GenEvA in Eclipse, and in particular of CMake.

- After having checked out the source code on the WorkSpace, go to the main
  CMake file, namely CMakeLists.txt, and edit the following lines:

    # You can hard-code the Boost paths here, if you compiled Boost yourself and
    #   it was not deployed in one of the stadard system locations
    #SET (BOOST_ROOT "/opt/boost136")
    #SET (BOOST_INCLUDEDIR "/opt/boost136/include/boost-1_36")
    #SET (BOOST_LIBRARYDIR "/opt/boost136/lib")

    # Set once for Eclipse to find the boost libraries, you can then comment
    #   it out again
    #SET(CMAKE_VERBOSE_MAKEFILE ON)

- Then run CMake, by either
    Run / External Tools / CMake  (also in the "External Tools" drop down toolbar button)
  or open the "Make Targets" view, and double click the "Run CMake" target in the GenEvA
  project.

- Then build the project by clicking on the small Hammer toolbar icon
