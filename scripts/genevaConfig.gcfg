####################################################################
#
# Copyright (C) Gemfony scientific UG (haftungsbeschraenkt)
#
# See the AUTHORS file in the top-level directory for a list of authors.
#
# Contact: contact [at] gemfony (dot) eu
#
# This file is part of the Geneva library collection.
#
# Geneva was developed with kind support from Karlsruhe Institute of
# Technology (KIT) and Steinbuch Centre for Computing (SCC). Further
# information about KIT and SCC can be found at http://www.kit.edu/english
# and http://scc.kit.edu .
#
# Geneva is free software: you can redistribute and/or modify it under
# the terms of version 3 of the GNU Affero General Public License
# as published by the Free Software Foundation.
#
# Geneva is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with the Geneva library. If not, see <http://www.gnu.org/licenses/>.
#
# For further information on Gemfony scientific and Geneva, visit
# http://www.gemfony.eu .
#
####################################################################
#
# This file holds some configuration options used for the compilation
# of the Geneva library. Copy to your compilation directory and adapt
# as needed. Then configure Geneva with a command line similar to
# "/where/geneva/resides/scripts/prepareBuild.sh ./myGenevaConfig.gcfg"
# Follow the instructions given by the script.


# Where the cmake executable is located
CMAKE="/usr/bin/cmake"

#
# The Boost location parameters.
#
# NOTE: you need to either leave all three parameters empty, or set
# the parameter BOOSTROOT, or set both of BOOSTLIBS and BOOSTINCL.
#
# If you installed a binary Boost distribution you should first try
# leaving all three parameters undefined (commented out).
# If you installed Boost from source using a default installation tree,
# then it should be enough to set BOOSTROOT to the Boost installation prefix.
# If CMake is not able to find the Boost headers/libraries correctly,
# or these are installed at non-standard locations, then you should try
# to set BOOSTLIBS and BOOSTINCL. The folder BOOSTLIBS should be the
# location of the libboost_* libraries, and the folder BOOSTINCL should
# be the location of Boost's 'boost/' headers folder where the file
# 'version.hpp' is found.
#
#BOOSTROOT="/opt/boost"
#BOOSTLIBS="/usr/lib"
#BOOSTINCL="/usr/include"

# Build mode must be either 'Release', 'Debug' or 'Sanitize'
# NOTE: the 'Sanitize' setting is experimental! It will default
# to 'Debug' on unsupported platforms; see
# http://googletesting.blogspot.ru/2014/06/threadsanitizer-slaughtering-data-races.html
BUILDMODE="Release"

# The C++ standard to use for building, one of 'auto' (choose automatically),
# 'cxx98' (enforce the C++98 standard), 'cxx11' (enforce the C++11 standard),
# or 'cxx14' (enforce the C++14 standard)
BUILDSTD="auto"

# Whether Geneva should be built with MPI support (experimental!).
# NOTE: Boost.MPI must be installed alongside supported MPI libraries
BUILDWITHMPI="0"

# Whether to build Geneva with testing code
BUILDTESTCODE="0"

# Whether to build static code / libraries (experimental!)
BUILDSTATIC="0"

# Whether compilation information should be emitted
VERBOSEMAKEFILE="0"

# Where the Geneva library shall go
INSTALLDIR="/opt/geneva"

# Further CMake settings you might want to provide
CEXTRAFLAGS=""
