This directory contains a complete implementation of feedforward neural networks,
which can be trained with all optimization algorithms shipped with Geneva. Several
examples are provided (such as n-dimensional cubes, spheres, or data-distributions 
along all axis, which need to be distinguished from even distributions as well as
possible). Also an example of data prediction is provided. The task is to predict
a sine-function.

E.g., in order to train a network which is supposed to recognize a filled circle
within a plain, issue the following command:

GNeuralNetwork --trainingDataFile=./DataSets/hyper_sphere.dat --architecture=2-20-20-1

This will create a neural network with 2 input nodes and one output node, as well
as 20 nodes in each of two hidden layers. Training is done with evolutionary algorithms
(the default) in this case. "hyper_sphere.dat" holds 2000 training sets of data points
inside and outside of a 2-dimensional plain. If the ROOT analysis framework is installed
on your system, you can have a look at the data distribution with the command

root -l ./DataSets/hyper_sphere.dat.C

Once the training has finished, the result is made available as a C++ function suitable
for inclusion in your own code.

Check out GNeuralNetworkIndividual::createHyperSphereNetworkData() in 
include/geneva-individuals/GNeuralNetworkIndividual.hpp for information on how to create
your own training data.
