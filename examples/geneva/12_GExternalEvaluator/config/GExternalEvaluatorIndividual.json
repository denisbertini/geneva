//-----------------------------------------------------------------
// This configuration file was automatically created by GParserBuilder
// File creation date: 2015-Mar-03 00:00:14
//-----------------------------------------------------------------

{
    "adProb":
    {
        "comment": "The probability for random adaption of values in evolutionary algorithms",
        "default": "1",
        "value": "1"
    },
    "adaptionThreshold":
    {
        "comment": "The number of calls to an adaptor after which adaption takes place",
        "default": "1",
        "value": "1"
    },
    "useBiGaussian":
    {
        "comment": "Whether to use a double gaussion for the adaption of parmeters in ES",
        "default": "false",
        "value": "false"
    },
    "sigma1":
    {
        "comment": "The sigma for gauss-adaption in ES",
        "comment": "(or the sigma of the left peak of a double gaussian)",
        "default": "0.025",
        "value": "0.025"
    },
    "sigmaSigma1":
    {
        "comment": "Influences the self-adaption of gauss-mutation in ES",
        "default": "0.8",
        "value": "0.8"
    },
    "minSigma1":
    {
        "comment": "The minimum value of sigma1",
        "default": "0.001",
        "value": "0.001"
    },
    "maxSigma1":
    {
        "comment": "The maximum value of sigma1",
        "default": "1",
        "value": "1"
    },
    "sigma2":
    {
        "comment": "The sigma of the right peak of a double gaussian (if any)",
        "default": "0.025",
        "value": "0.025"
    },
    "sigmaSigma2":
    {
        "comment": "Influences the self-adaption of gauss-mutation in ES",
        "default": "0.8",
        "value": "0.8"
    },
    "minSigma2":
    {
        "comment": "The minimum value of sigma2",
        "default": "0.001",
        "value": "0.001"
    },
    "maxSigma2":
    {
        "comment": "The maximum value of sigma2",
        "default": "1",
        "value": "1"
    },
    "delta":
    {
        "comment": "The start distance between both peaks used for bi-gaussian mutations in ES",
        "default": "0.025",
        "value": "0.025"
    },
    "sigmaDelta":
    {
        "comment": "The width of the gaussian used for mutations of the delta parameter",
        "default": "0.8",
        "value": "0.8"
    },
    "minDelta":
    {
        "comment": "The minimum allowed value of delta",
        "default": "0.001",
        "value": "0.001"
    },
    "maxDelta":
    {
        "comment": "The maximum allowed value of delta",
        "default": "0.5",
        "value": "0.5"
    },
    "programName":
    {
        "comment": "The name of the external evaluation program",
        "default": ".\/scripts\/evaluator.py",
        "value": ".\/scripts\/evaluator.py"
    },
    "customOptions":
    {
        "comment": "Any custom options you wish to pass to the external evaluator",
        "default": "empty",
        "value": "empty"
    },
    "parameterFile":
    {
        "comment": "The base name assigned to parameter files",
        "comment": "in addition to data identifying this specific evaluation",
        "default": "parameterFile",
        "value": "parameterFile"
    },
    "initValues":
    {
        "comment": "Indicates, whether individuals should be initialized randomly (random),",
        "comment": "with the lower (min) or upper (max) boundary of their value ranges",
        "default": "random",
        "value": "random"
    },
    "evalPolicy":
    {
        "comment": "Specifies which strategy should be used to calculate the evaluation:",
        "comment": "0 (a.k.a. USESIMPLEEVALUATION): Always call the evaluation function, even for invalid solutions",
        "comment": "1 (a.k.a. USEWORSTCASEFORINVALID) : Assign the worst possible value to our fitness and evaluate only valid solutions",
        "comment": "2 (a.k.a. USESIGMOID): Assign a multiple of validityLevel_ and sigmoid barrier to invalid solutions, apply a sigmoid function to valid evaluations",
        "comment": "3 (a.k.a. USEWORSTKNOWNVALIDFORINVALID): Assign \"invalidityLevel*worstKnownValid\" to invalid individuals, using normal evaluation otherwise",
        "default": "0",
        "value": "0"
    },
    "steepness":
    {
        "comment": "When using a sigmoid function to transform the individual's fitness,",
        "comment": "this parameter influences the steepness of the function at the center of the sigmoid.",
        "comment": "The parameter must have a value > 0.",
        "default": "1000",
        "value": "1000"
    },
    "barrier":
    {
        "comment": "When using a sigmoid function to transform the individual's fitness,",
        "comment": "this parameter sets the upper\/lower boundary of the sigmoid.",
        "comment": "The parameter must have a value > 0.",
        "default": "10000",
        "value": "10000"
    },
    "maxUnsuccessfulAdaptions":
    {
        "comment": "The maximum number of unsuccessful adaptions in a row for one call to adapt()",
        "default": "1000",
        "value": "1000"
    },
    "maxRetriesUntilValid":
    {
        "comment": "The maximum allowed number of retries during the",
        "comment": "adaption of individuals until a valid solution was found",
        "comment": "A parameter set is considered to be \"valid\" if",
        "comment": "it passes all validity checks",
        "default": "10",
        "value": "10"
    },
    "maximize":
    {
        "comment": "Specifies whether the individual should be maximized (1) or minimized (0)",
        "comment": "Note that minimization is the by far most common option.",
        "default": "0",
        "value": "0"
    },
    "perItemCrossOverProbability":
    {
        "comment": "The likelihood for two data items to be exchanged",
        "comment": "in a \"per-item\" cross-over operation",
        "default": "0.5",
        "value": "0.5"
    }
}
