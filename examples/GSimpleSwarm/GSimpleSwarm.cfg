#################################################################################
# Configuration file for GSimpleSwarm                                           #
#                                                                               #
# Authors: Ruediger Berlich                                                     #
#################################################################################

# The amount of random number producer threads
nProducerThreads = 8
# The amount of threads processing individuals simultaneously
nEvaluationThreads = 16
# The number of neighborhoods in the population
nNeighborhoods = 5
# The number of individuals in each neighborhood
nNeighborhoodMembers = 20
# Maximum number of iterations in the population
maxIterations = 1000
# The maximum number of minutes the optimization of the population should run (0 means "no limit")
maxMinutes = 0
# The number of iterations after which information should be emitted in the super-population
reportIteration = 1
# The size of the buffer with random arrays in the random factory
arraySize = 1000
# Determines whether information about configuration options should be emitted
verbose = 1
# The maximum number of cycles a client should perform adaptions before it returns without success
processingCycles = 1
# Specifies whether results should be returned even if they are not better than before
returnRegardless = 1
# Specifies how many processing units are available in networked mode
nProcessingUnits = 1
# The amount of variables in the parabola
parDim = 100
# The lower boundary for all variables
minVar = -10.
# The upper boundary for all variables
maxVar = 10.
# The id of the evaluation function. Allowed values: 
# 0 (parabola)
# 1 (Berlich)
# 2 (Rosenbrock)
# 3 (Ackley)
# 4 (Rastrigin)
# 5 (Schwefel)
# 6 (Salomon)
evalFunction = 3
# A constant to be multiplied with the local direction vector
cLocal = 2.
# A constant to be multiplied with the old velocity vector
cDelta = 2.
# Use linear (0) or classical (1) update rule
ur = 0
# The x-dimension of the canvas for the result print(s)
xDim = 1024
# The y-dimension of the canvas for the result print(s)
yDim = 1024
# Specifies whether snapshots should be taken in regular intervals
followProgress = 0
# If set, all individuals will be initialized randomly. If 0, all individuals in one neighborhood will have the same start value
allRandomInit = 0